upstream backend {
  server demoapp-backend:8080;
}

upstream frontend {
  server demoapp-frontend:8080;
}

server {
  listen 80;
  listen [::]:80;
  server_name demoapp.example.com;


  location / {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Nginx-Proxy true;
    proxy_pass http://frontend/;
    proxy_set_header Host $http_host;
    proxy_pass_header Server;
    proxy_redirect off;
  }

  location /users {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Nginx-Proxy true;
    proxy_pass http://backend/users;
    proxy_set_header Host $http_host;
    proxy_pass_header Server;
    proxy_redirect off;
  }

  location /user {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Nginx-Proxy true;
    proxy_pass http://backend/user;
    proxy_set_header Host $http_host;
    proxy_pass_header Server;
    proxy_redirect off;
  }

  # Sample rule if you want a common prefix for the backend
  # location /api {
  #   rewrite ^/api/(.*) /$1 break;
  #   proxy_set_header X-Real-IP $remote_addr;
  #   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  #   proxy_set_header X-Nginx-Proxy true;
  #   proxy_pass http://backend/;
  #   proxy_set_header Host $http_host;
  #   proxy_pass_header Server;
  #   proxy_redirect off;
  # }

  error_page 500 502 503 504 /50x.html;
  location = /50x.html {
    root /usr/share/nginx/html;
  }
}