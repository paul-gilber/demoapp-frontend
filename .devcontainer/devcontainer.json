// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/docker-outside-of-docker
{
	"name": "Development Environment for demoapp-backend",
	// Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
	// "image": "mcr.microsoft.com/devcontainers/base:bullseye",

	// Use Docker Compose File
	"dockerComposeFile": "compose.yaml",
	// Service to connect from Docker Compose File
	"service": "devcontainer",
	"workspaceFolder": "/workspaces/${localWorkspaceFolderBasename}", // indicates where to mount the workspace folder. This corresponds to a sub-folder under the mount point from ../..:/workspaces:cached in the docker-compose.yml file

	// Available features: https://containers.dev/features
	"features": {
		// Preserve shell command history: https://github.com/stuartleeks/dev-container-features
		"ghcr.io/stuartleeks/dev-container-features/shell-history:0": {},
		// Use host's docker: https://github.com/devcontainers/features/tree/main/src/docker-outside-of-docker
		"ghcr.io/devcontainers/features/docker-outside-of-docker:1": {
			"version": "latest",
			"enableNonRootDocker": "true",
			"moby": "true"
		},
		// Install Node.js (via nvm), yarn and pnpm: https://github.com/devcontainers/features/tree/main/src/node
		"ghcr.io/devcontainers/features/node:1": {
			"version": "lts"
		},
		// Install Homebrew: https://github.com/meaningful-ooo/devcontainer-features/tree/main/src/homebrew
		"ghcr.io/meaningful-ooo/devcontainer-features/homebrew:2": {},
		// Install Homebrew Package: https://github.com/devcontainers-contrib/features/tree/main/src/homebrew-package
		"ghcr.io/devcontainers-contrib/features/homebrew-package:1": {},
		// Install MySQL (via Homebrew): http://github.com/devcontainers-contrib/features/tree/main/src/mysql-homebrew
		"ghcr.io/devcontainers-contrib/features/mysql-homebrew:1": {},
		// Install Podman (via Homebrew): http://github.com/devcontainers-contrib/features/tree/main/src/podman-homebrew
		"ghcr.io/devcontainers-contrib/features/podman-homebrew:1": {},
		// Install Trivy: https://github.com/itsmechlark/features/tree/main/src/trivy
		"ghcr.io/itsmechlark/features/trivy:1": {},
		// Install jq, yq, gojq, xq, jaq : https://github.com/eitsupi/devcontainer-features/tree/main/src/jq-likes
		"ghcr.io/eitsupi/devcontainer-features/jq-likes:2": {
			"jqVersion": "latest",
			"yqVersion": "latest"
		},
		// Install yamllint: https://github.com/devcontainers-contrib/features/tree/main/src/yamllint
		"ghcr.io/devcontainers-contrib/features/yamllint:2": {},
		// Install skopeo: https://github.com/jsburckhardt/devcontainer-features
		"ghcr.io/jsburckhardt/devcontainer-features/skopeo:1": {}
	},

	// Use this environment variable if you need to bind mount your local source code into a new container.
	"remoteEnv": {
		"LOCAL_WORKSPACE_FOLDER": "${localWorkspaceFolder}"
	},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": ".devcontainer/postCreateCommand.sh", 

	// Configure tool-specific properties.
	// "customizations": {},

	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	"remoteUser": "vscode",

	"customizations": {
		"vscode": {
			"extensions": [
				"ms-azuretools.vscode-docker",
				"github.vscode-github-actions",
				"cweijan.vscode-mysql-client2",
				"hashicorp.hcl",
				"Perkovec.emoji"
			]
		}
	},

	"mounts": [
		// Mount Host NPM Cache
		{
			"source": "${localEnv:HOME}${localEnv:USERPROFILE}/.npm",
			"target": "/home/vscode/.npm",
			"type": "bind"
		},
		// Mount Host SSH Keys and Configs
		{
			"source": "${localEnv:HOME}${localEnv:USERPROFILE}/.ssh",
			"target": "/home/vscode/.ssh",
			"type": "bind"
		}
	]
}
